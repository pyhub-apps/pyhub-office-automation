name: Publish to PyPI and GitHub Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          uv sync --extra dev --extra build
          uv pip install build twine

      - name: Build package
        run: uv run python -m build --wheel

      - name: Check if pre-release
        id: check_prerelease
        run: |
          if [[ "${{ github.ref_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(a|b|rc)[0-9]+$ ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
          generate_release_notes: true
          prerelease: ${{ steps.check_prerelease.outputs.prerelease }}
          body: |
            ## pyhub-office-automation ${{ github.ref_name }}

            ### Installation
            ```bash
            pip install pyhub-office-automation
            ```

            ### Usage
            ```bash
            oa --version
            oa info
            oa install-guide
            oa excel list
            oa hwp list
            ```

            ### System Requirements
            - Python 3.13+
            - Windows 10/11 (for full functionality)
            - For Excel automation: Microsoft Excel installed
            - For HWP automation: 한글(HWP) program installed

            ### Note
            This release includes both the Python package (wheel) and Windows executable.
            - **Python package**: Use `pip install pyhub-office-automation`
            - **Windows executable**: Download from the parallel release workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv run twine upload --verbose dist/*.whl