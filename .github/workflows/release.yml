name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --extra dev --extra build

      - name: Build executable
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Write-Host "🔨 Building Windows executable..."

          uv run pwsh -File build_windows.ps1 -BuildType onefile -CiMode

          # 빌드 결과 확인
          if (-not (Test-Path "dist/oa.exe")) {
              throw "Build failed: executable not found"
          }

          Write-Host "✅ Build completed successfully"

      - name: Package executable
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          $zipName = "oa-windows-amd64.zip"
          $zipPath = "dist/$zipName"

          Write-Host "📦 Creating release package..."

          # 버전 정보 가져오기
          $version = & uv run python -c "from pyhub_office_automation.version import get_version; print(get_version())"

          # KST 시간 계산 (UTC+9)
          $utcTime = Get-Date -AsUTC
          $kstTime = $utcTime.AddHours(9)
          $buildDate = $kstTime.ToString("yyyy-MM-dd HH:mm:ss") + " KST"

          # version.txt 파일 생성 (한글)
          $gitTag = "${{ github.ref_name }}"
          $versionContent = @"
pyhub-office-automation
버전: $version
빌드 시간: $buildDate
Git 태그: $gitTag
"@
          $versionContent | Out-File -FilePath "dist/version.txt" -Encoding UTF8
          Write-Host "📝 Created version.txt with version: $version"

          # ZIP 생성 (oa.exe와 version.txt 포함)
          Compress-Archive -Path "dist/oa.exe", "dist/version.txt" -DestinationPath $zipPath -CompressionLevel Optimal

          if (Test-Path $zipPath) {
              $sizeMB = [math]::Round((Get-Item $zipPath).Length / 1MB, 2)
              Write-Host "✅ Package created: $zipName (${sizeMB} MB)"
          } else {
              throw "Failed to create package"
          }

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'a') || contains(github.ref_name, 'b') || contains(github.ref_name, 'rc') }}
          body: |
            ## pyhub-office-automation ${{ github.ref_name }}

            ### 📦 설치 방법
            1. `oa-windows-amd64.zip` 파일 다운로드
            2. 압축 해제하여 `oa.exe` 실행 파일 추출
            3. Python 설치 없이 바로 실행 가능

            ### 🚀 사용 방법
            ```bash
            oa.exe --version      # 버전 확인
            oa.exe info          # 시스템 정보
            oa.exe excel list    # Excel 명령어 목록
            oa.exe hwp list      # HWP 명령어 목록
            ```

            ### 💻 시스템 요구사항
            - Windows 10/11 (AMD64)
            - Microsoft Excel (Excel 자동화 기능 사용 시)
            - 한글(HWP) (HWP 자동화 기능 사용 시)

            ### 📝 버전 정보
            - 빌드 시간: KST 기준
            - 버전 체계: HeadVer (major.yearweek.build)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
