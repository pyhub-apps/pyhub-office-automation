name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --extra dev --extra build

      - name: Build executable
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Write-Host "üî® Building Windows executable..."

          uv run pwsh -File build_windows.ps1 -BuildType onefile -CiMode

          # ÎπåÎìú Í≤∞Í≥º ÌôïÏù∏
          if (-not (Test-Path "dist/oa.exe")) {
              throw "Build failed: executable not found"
          }

          Write-Host "‚úÖ Build completed successfully"

      - name: Package executable
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"

          $zipName = "oa-windows-amd64.zip"
          $zipPath = "dist/$zipName"

          Write-Host "üì¶ Creating release package..."
          Compress-Archive -Path "dist/oa.exe" -DestinationPath $zipPath -CompressionLevel Optimal

          if (Test-Path $zipPath) {
              $sizeMB = [math]::Round((Get-Item $zipPath).Length / 1MB, 2)
              Write-Host "‚úÖ Package created: $zipName (${sizeMB} MB)"
          } else {
              throw "Failed to create package"
          }

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, 'a') || contains(github.ref_name, 'b') || contains(github.ref_name, 'rc') }}
          body: |
            ## pyhub-office-automation ${{ github.ref_name }}

            ### Installation
            1. Download `oa-windows-amd64.zip`
            2. Extract to get `oa.exe`
            3. Run executable (no Python installation required)

            ### Usage
            ```bash
            oa.exe --version
            oa.exe info
            oa.exe excel list
            oa.exe hwp list
            ```

            ### System Requirements
            - Windows 10/11 (AMD64)
            - Microsoft Excel (for Excel automation)
            - ÌïúÍ∏Ä(HWP) (for HWP automation)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
