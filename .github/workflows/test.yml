name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install package in development mode
      run: |
        pip install -e .

    - name: Test CLI installation
      run: |
        oa --version
        oa info --format json

    - name: Run unit tests (when available)
      run: |
        # pytest tests/ --cov=pyhub_office_automation --cov-report=xml
        echo "Unit tests will be added in future releases"

    - name: Test version system
      run: |
        python -c "from pyhub_office_automation.version import get_version_info; import json; print(json.dumps(get_version_info(), indent=2))"

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Check code formatting with black
      run: |
        black --check pyhub_office_automation/

    - name: Check import sorting with isort
      run: |
        isort --check-only pyhub_office_automation/

    - name: Lint with flake8
      run: |
        flake8 pyhub_office_automation/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 pyhub_office_automation/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics